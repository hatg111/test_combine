package com.tistory.pentode;

import java.text.DateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.tistory.pentode.service.StoreService;
import com.tistory.pentode.vo.StoreVO;
import com.tistory.pentode.service.MainService;
import com.tistory.pentode.vo.MainVO;

/**
 * Handles requests for the application home page.
 */
@Controller
public class StoreController {

	@Resource(name = "storeService")
	private StoreService storeService;

	private static final Logger logger = LoggerFactory.getLogger(StoreController.class);

	/**
	 * Simply selects the home view to render by returning its name.
	 */

	@RequestMapping(value = "/storeranking")
	public String boardList(Model model) throws Exception {

		List<StoreVO> list = storeService.selectStoreList();

		logger.info(list.toString());

		model.addAttribute("storelist", list);

		return "storeranking/storeranking";

	}

	@RequestMapping(value = "/storebycategory")
	public String storebycategory(Model model) throws Exception {

		List<StoreVO> list = storeService.selectStoreList();

		logger.info(list.toString());

		model.addAttribute("storelist", list);

		return "storeranking/storelistbycategory";

	}
	
	@RequestMapping(value = "/storelistA")
	public String storelistA(Model model) throws Exception {

		List<StoreVO> list = storeService.selectStoreListA();

		logger.info(list.toString());

		model.addAttribute("storelist", list);

		return "storeranking/storerankingA";

	}
	
	@RequestMapping(value = "/storelistB")
	public String storelistB(Model model) throws Exception {

		List<StoreVO> list = storeService.selectStoreListB();

		logger.info(list.toString());

		model.addAttribute("storelist", list);

		return "storeranking/storerankingB";

	}
	
	@RequestMapping(value = "/storelistC")
	public String storelistC(Model model) throws Exception {

		List<StoreVO> list = storeService.selectStoreListC();

		logger.info(list.toString());

		model.addAttribute("storelist", list);

		return "storeranking/storerankingC";

	}
	
	@RequestMapping(value = "/storelistD")
	public String storelistD(Model model) throws Exception {

		List<StoreVO> list = storeService.selectStoreListD();

		logger.info(list.toString());

		model.addAttribute("storelist", list);

		return "storeranking/storerankingD";

	}

	/*
	 * @RequestMapping(value = "/store", method = RequestMethod.GET) public String
	 * boardList(Model model) throws Exception {
	 * 
	 * List<StoreVO> list = storeService.selectStoreList();
	 * 
	 * logger.info(list.toString());
	 * 
	 * model.addAttribute("storelist", list);
	 * 
	 * return "store/storelist";
	 */

	/*
	 * @RequestMapping(value = "/store", method = RequestMethod.GET) public String
	 * home(Locale locale, Model model) {
	 * logger.info("Welcome home! The client locale is {}.", locale);
	 * 
	 * Date date = new Date(); DateFormat dateFormat =
	 * DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, locale);
	 * 
	 * String formattedDate = dateFormat.format(date);
	 * 
	 * model.addAttribute("serverTime", formattedDate );
	 * 
	 * return "store/storelist";
	 * 
	 * }
	 */
	/*
	 * @RequestMapping(value = "/boardList.do") public String boardList(Model model)
	 * throws Exception {
	 * 
	 * List<BoardVO> list = boardService.selectBoardList();
	 * 
	 * logger.info(list.toString());
	 * 
	 * model.addAttribute("list", list);
	 * 
	 * return "boardList"; }
	 */
}
